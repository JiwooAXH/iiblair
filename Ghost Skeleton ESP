--// 2D Box ESP Script for Ghost Model
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Function to create ESP lines
local function createESPLine()
    local line = Drawing.new("Line")
    line.Color = Color3.fromRGB(0, 255, 0) -- Green
    line.Thickness = 2
    line.Transparency = 1
    return line
end

-- Function to update 2D Box ESP
local function updateBoxESP(model, lines)
    if not model:IsA("Model") then return end
    local primaryPart = model.PrimaryPart or model:FindFirstChildOfClass("BasePart")
    if not primaryPart then return end
    
    local camera = workspace.CurrentCamera
    local size = primaryPart.Size * 2 -- Adjust size scale
    local corners3D = {
        primaryPart.Position + Vector3.new(size.X / 2, size.Y / 2, 0),
        primaryPart.Position + Vector3.new(-size.X / 2, size.Y / 2, 0),
        primaryPart.Position + Vector3.new(-size.X / 2, -size.Y / 2, 0),
        primaryPart.Position + Vector3.new(size.X / 2, -size.Y / 2, 0)
    }
    
    local corners2D = {}
    local onScreen = true
    for i, corner in ipairs(corners3D) do
        local screenPos, visible = camera:WorldToViewportPoint(corner)
        if not visible then onScreen = false end
        corners2D[i] = Vector2.new(screenPos.X, screenPos.Y)
    end
    
    if onScreen then
        for i = 1, 4 do
            local nextIndex = (i % 4) + 1
            lines[i].From = corners2D[i]
            lines[i].To = corners2D[nextIndex]
            lines[i].Visible = true
        end
    else
        for i = 1, 4 do
            lines[i].Visible = false
        end
    end
end

-- Main loop to track the Ghost model
local ESPStorage = {}
RunService.RenderStepped:Connect(function()
    local ghost = workspace:FindFirstChild("Ghost")
    if ghost and ghost:IsA("Model") then
        if not ESPStorage[ghost] then
            ESPStorage[ghost] = {}
            for _ = 1, 4 do -- Create 4 lines for the 2D box
                table.insert(ESPStorage[ghost], createESPLine())
            end
        end
        updateBoxESP(ghost, ESPStorage[ghost])
    else
        for _, lines in pairs(ESPStorage) do
            for _, line in ipairs(lines) do
                line:Remove()
            end
        end
        ESPStorage = {}
    end
end)
